name: Build and Testing Rust Project

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: macos-latest
    steps:
    - name: Checkout branch in CI
      uses: actions/checkout@v3

    - name: Run tests
      run: cargo test --release --verbose

    
  build:
    strategy:
      matrix:
        os: [ macos, ubuntu ]

    needs: [test]
    runs-on: ${{matrix.os}}-latest
    steps:
      - name: Checkout branch in CI
        uses: actions/checkout@v3

      - name: Install dependencies for OpenCL 
        if: ${{ matrix.os == 'Ubuntu' }}
        run: |
          sudo apt install -y ocl-icd-libopencl1 ocl-icd-opencl-dev pocl-opencl-icd clinfo
      
      - name: Show OpenCL Device info 
        if: ${{ matrix.os == 'Ubuntu' }}
        run: clinfo --human

      - name: Build
        run: cargo build --release --verbose
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}_build_bin
          path: target/release/path_walker

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      HELM_EXPERIMENTAL_OCI: 1 #enable OCI support
      HELM_VERSION_TO_INSTALL: 3.5.0 # version of HEL to install
      GHCR_IMAGE: ghcr.io/neirth/path_walker
    steps:
      - name: Checkout branch in CI
        uses: actions/checkout@v3

      - name: Install Helm3
        uses: Azure/setup-helm@v1
        with:
          # Version of helm
          version: ${{ env.HELM_VERSION_TO_INSTALL }} # default is latest

      - name: Login into Github Container Registry using Docker
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust Build Flags to compile
        run: |
          cat << EOF > .cargo/config
          [build]
          rustflags = ["-C", "target-feature=sse4.2", "-C", "target-feature=avx2", "-C", "target-cpu=native"]
          EOF

      - name: Login into GitHub Container Registry using Helm
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | helm registry login ${{ env.GHCR_IMAGE }} --username ${{ github.repository_owner }} --password-stdin

      - name: Build and Push Docker Container into Github Container Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./tools/docker/Dockerfile
          push: true
          tags: ${{ env.GHCR_IMAGE }}/runtime:${{ github.sha }}, ${{ env.GHCR_IMAGE }}/runtime:latest
          labels: org.opencontainers.image.source

      - name: Build and Push Helm Chart into Github Container Registry
        run: |
          sed -i 's#"latest"#"${{ github.sha }}"#g' tools/helm/values.yaml
          helm chart save ${{ github.workspace }}/tools/helm/ ${{ env.GHCR_IMAGE }}/chart:${{ github.sha }}
          helm chart push ${{ env.GHCR_IMAGE }}/chart:${{ github.sha }}
